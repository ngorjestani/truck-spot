{"version":3,"sources":["components/Search.tsx","pages/Home.tsx","components/SignInForm.tsx","pages/SignIn.tsx","config/firebaseConfig.ts","components/CreateAccountForm.tsx","pages/CreateAccount.tsx","models/MenuItem.ts","models/FoodTruck.ts","components/TruckListItem.tsx","components/TruckList.tsx","components/ResultsMap.tsx","pages/SearchResults.tsx","pages/Account.tsx","pages/TruckDetail.tsx","models/Cuisines.ts","components/MenuInput.tsx","components/AddTruckForm.tsx","pages/AddTruck.tsx","components/NavMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Search","searchValue","handlePlaceSelected","handleSubmit","ref","usePlacesWidget","apiKey","process","onPlaceSelected","place","options","types","console","log","GOOGLE_MAPS_API_KEY","Form","onSubmit","InputGroup","Control","type","placeholder","Button","icon","faSearch","Home","props","useState","setSearchValue","navigate","useNavigate","Container","fluid","Row","className","Col","xs","span","offset","md","Image","src","width","newValue","SignInForm","Group","Label","Text","to","variant","SignIn","firebase","initializeApp","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","CreateAccountForm","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","createUserWithEmailAndPassword","then","userCredential","catch","error","errorCode","code","errorMessage","message","value","onChange","e","target","CreateAccount","MenuItem","itemName","itemPrice","name","price","this","FoodTruck","truckName","truckAddress","truckCoordinates","truckPhone","truckCuisine","truckWebsite","truckMenu","truckImageURL","address","coordinates","phone","cuisine","website","menu","imageURL","location","lat","lng","menuItems","forEach","item","push","toFirestore","firebaseConverter","truck","fromFirestore","snapshot","data","collectionName","TruckListItem","Card","style","backgroundColor","Img","height","Body","Title","TruckList","trucks","setTrucks","getListOfTrucksFromFirebase","a","response","collection","withConverter","get","docs","doc","prevState","useEffect","getCards","map","xl","nanoid","ResultsMap","SearchResults","displayMap","setDisplayMap","ButtonGroup","onClick","disabled","Account","TruckDetail","cuisines","id","MenuInput","menuList","addItem","setName","setPrice","listItems","preventDefault","faPlus","AddTruckForm","inputState","setInputState","setAddress","setMenu","imageFile","setImageFile","p","upload","put","on","getDownloadURL","downloadURL","foodTruck","formatted_address","geometry","add","xxl","Select","files","AddTruck","NavMenu","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","require","config","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9dc8d0.chunk.js","sourcesContent":["import {FunctionComponent, RefObject, useState} from \"react\";\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {usePlacesWidget} from \"react-google-autocomplete\";\n\ntype SearchProps = {\n    searchValue: google.maps.places.PlaceResult,\n    handlePlaceSelected: (place: google.maps.places.PlaceResult) => void,\n    handleSubmit: () => void,\n}\n\nexport const Search: FunctionComponent<SearchProps> = ({searchValue,handlePlaceSelected, handleSubmit}) => {\n    const {ref} = usePlacesWidget<HTMLInputElement>({\n        apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        onPlaceSelected: (place) => {\n            handlePlaceSelected(place);\n        },\n        options: {\n            types: ['address'],\n        }\n\n    });\n\n    console.log(process.env.GOOGLE_MAPS_API_KEY)\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <InputGroup>\n                <Form.Control\n                    type='input'\n                    ref={ref}\n                    placeholder='Search...'\n                />\n                <Button type='submit'><FontAwesomeIcon icon={faSearch}/></Button>\n            </InputGroup>\n        </Form>\n    )\n}","import {FunctionComponent, useState} from \"react\";\nimport {Col, Container, Image, Row} from \"react-bootstrap\";\nimport {Search} from \"../components/Search\";\nimport {useNavigate} from \"react-router-dom\";\n\ntype HomeProps = {\n\n}\n\nexport const Home : FunctionComponent<HomeProps> = (props) => {\n    const [searchValue, setSearchValue] = useState<google.maps.places.PlaceResult>({});\n    const navigate = useNavigate();\n\n    const handlePlaceSelected = (newValue: google.maps.places.PlaceResult) => {\n        setSearchValue(newValue);\n    }\n\n    const handleSubmit = () => {\n        navigate('results');\n    }\n\n    return (\n        <Container fluid>\n            <Row className='mt-4'>\n                <Col xs={{span: 8, offset: 2}} md={{span: 4, offset: 4}}>\n                    <Image src='./logo.svg' width='100%' fluid />\n                </Col>\n            </Row>\n            <Row className='mt-5'>\n                <Col xs={{span: 10, offset: 1}} md={{span: 8, offset: 2}}>\n                    <Search\n                        searchValue={searchValue}\n                        handlePlaceSelected={handlePlaceSelected}\n                        handleSubmit={handleSubmit}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import {FunctionComponent} from \"react\";\nimport {Button, Container, Form} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\ntype SignInFormProps = {\n\n}\n\nexport const SignInForm : FunctionComponent<SignInFormProps> = (props) => {\n    return (\n        <Container>\n            <Form className='bg-light p-3 rounded shadow'>\n                <Form.Group className='mb-2'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Email' className='rounded-pill' />\n                </Form.Group>\n                <Form.Group className='my-2'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Password' className='rounded-pill' />\n                </Form.Group>\n                <Form.Text className='text-muted'>\n                    Don't have an account? <Link to='../create'>Create an account</Link>\n                </Form.Text>\n                <br />\n                <Button variant='primary' type='submit' className='mt-2 rounded-pill shadow-sm'>\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import {FunctionComponent} from \"react\";\nimport {Col, Container, Image, Row} from \"react-bootstrap\";\nimport {SignInForm} from \"../components/SignInForm\";\n\ntype SignInProps = {\n\n}\n\nexport const SignIn : FunctionComponent<SignInProps> = (props) => {\n    return (\n        <Container fluid>\n            <Row className='mt-4'>\n                <Col xs={{span: 4, offset: 4}} md={{span: 2, offset: 5}}>\n                    <Image src='./logo.svg' width='100%' fluid />\n                </Col>\n            </Row>\n            <Row className='mt-5'>\n                <Col md={{span: 8, offset: 2}}>\n                    <SignInForm />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import firebase from \"firebase\";\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport {db, auth, storage};","import {FunctionComponent, useState} from \"react\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {auth} from \"../config/firebaseConfig\";\n\ntype CreateAccountFormProps = {}\n\nexport const CreateAccountForm: FunctionComponent<CreateAccountFormProps> = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const handleSubmit = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n                console.log(userCredential)\n            })\n            .catch((error) => {\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                console.error('error creating user', errorCode, errorMessage);\n            });\n    };\n\n    return (\n        <Form className='bg-light p-3 rounded shadow' onSubmit={handleSubmit}>\n            <Row className='mb-2'>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='First Name'\n                            value={firstName}\n                            onChange={(e) => setFirstName(e.target.value)}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='Last Name'\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row className='my-2'>\n                <Form.Group>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n            </Row>\n            <Row className='my-2'>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row>\n                <Form.Text className='text-muted'>\n                    Already have an account? <Link to='../login'>Sign in.</Link>\n                </Form.Text>\n            </Row>\n            <Row className='mt-2'>\n                <Col xs='auto' className='text-center'>\n                    <Button\n                        variant='primary'\n                        type='submit'\n                        className='rounded-pill shadow-sm'\n                    >\n                        Create Account\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}","import {FunctionComponent} from \"react\";\nimport {Col, Container, Image, Row} from \"react-bootstrap\";\nimport {CreateAccountForm} from \"../components/CreateAccountForm\";\n\ntype CreateAccountProps = {\n\n}\n\nexport const CreateAccount : FunctionComponent<CreateAccountProps> = (props) => {\n    return (\n        <Container fluid>\n            <Row className='mt-4'>\n                <Col xs={{span: 4, offset: 4}} md={{span: 2, offset: 5}}>\n                    <Image src='./logo.svg' width='100%' fluid />\n                </Col>\n            </Row>\n            <Row className='mt-5'>\n                <Col md={{span: 8, offset: 2}}>\n                    <CreateAccountForm />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","class MenuItem {\n    name: string;\n    price: string;\n\n    constructor(itemName?: string, itemPrice?: string) {\n        this.name = itemName ? itemName :  '';\n        this.price = itemPrice ? itemPrice : '';\n    }\n\n    toFirestore() {\n        return {\n            name: this.name,\n            price: this.price,\n        }\n    }\n}\n\n\n\nexport default MenuItem;","import MenuItem from \"./MenuItem\";\nimport firebase from \"firebase\";\n\nclass FoodTruck {\n    name: string;\n    address: string;\n    //This should be a google.maps.LatLng type but that breaks the firebase converter for some reason\n    coordinates: any;\n    phone: string;\n    cuisine: string;\n    website: string;\n    menu: MenuItem[];\n    imageURL: string;\n\n    constructor(\n        truckName: string,\n        truckAddress: string,\n        //This also should be a google.maps.LatLng type\n        truckCoordinates: any,\n        truckPhone: string,\n        truckCuisine: string,\n        truckWebsite: string,\n        truckMenu: MenuItem[],\n        truckImageURL: string,\n    ) {\n        this.name = truckName;\n        this.address = truckAddress;\n        this.coordinates = truckCoordinates;\n        this.phone = truckPhone;\n        this.cuisine = truckCuisine;\n        this.website = truckWebsite;\n        this.menu = truckMenu;\n        this.imageURL = truckImageURL;\n    }\n\n    /*TODO:\n       figure out how to use the other converter\n       method without fucking something up*/\n\n    toFirestore() {\n        const location = {\n            lat: this.coordinates.lat(),\n            lng: this.coordinates.lng(),\n        }\n        const menuItems: Object[] = [];\n\n        this.menu.forEach((item) => {\n            menuItems.push(item.toFirestore());\n        });\n\n        return {\n            name: this.name,\n            address: this.address,\n            coordinates: location,\n            phone: this.phone,\n            cuisine: this.cuisine,\n            website: this.website,\n            menu: menuItems,\n            imageURL: this.imageURL,\n        }\n    }\n\n    static firebaseConverter = {\n        //Still using the other converter method because I know it works\n        toFirestore(truck: FoodTruck): firebase.firestore.DocumentData {\n            const location = {\n                lat: truck.coordinates.lat(),\n                lng: truck.coordinates.lng(),\n            }\n            const menuItems: Object[] = [];\n\n            truck.menu.forEach((item) => {\n                menuItems.push(item.toFirestore());\n            });\n\n            return {\n                name: truck.name,\n                address: truck.address,\n                coordinates: location,\n                phone: truck.phone,\n                cuisine: truck.cuisine,\n                website: truck.website,\n                menu: menuItems,\n                imageURL: truck.imageURL,\n            }\n        },\n        fromFirestore(\n            snapshot: firebase.firestore.QueryDocumentSnapshot,\n            options: firebase.firestore.SnapshotOptions\n        ): FoodTruck {\n            const data = snapshot.data(options);\n            let menuItems : MenuItem[] = [];\n\n            data.menu.forEach((item: any) => {\n                menuItems.push(new MenuItem(item.name, item.price));\n            });\n\n            return new FoodTruck(\n                data.name,\n                data.address,\n                data.coordinates,\n                data.phone,\n                data.cuisine,\n                data.website,\n                menuItems,\n                data.imageURL,\n            );\n        }\n    }\n\n    static collectionName = 'foodTrucks';\n}\n\nexport default FoodTruck;","import {FunctionComponent} from \"react\";\nimport FoodTruck from \"../models/FoodTruck\";\nimport {Button, Card} from \"react-bootstrap\";\n\ntype TruckListItemProps = {\n    truck: FoodTruck,\n}\n\nexport const TruckListItem : FunctionComponent<TruckListItemProps> = ({truck}) => {\n    return (\n        <Card style={{backgroundColor: '#eee'}} className='border-0'>\n            <Card.Img variant='top' src={truck.imageURL} style={{height: '160px'}} />\n            <Card.Body>\n                <Card.Title>{truck.name}</Card.Title>\n                <Card.Text>\n                    {truck.address}<br />\n                    Cuisine: {truck.cuisine}<br />\n                    Phone: {truck.phone}<br />\n                </Card.Text>\n                <Button variant='secondary'>Details</Button>\n            </Card.Body>\n        </Card>\n    )\n}","import {FunctionComponent, useEffect, useState} from \"react\";\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\nimport {db} from \"../config/firebaseConfig\";\nimport FoodTruck from \"../models/FoodTruck\";\nimport {TruckListItem} from \"./TruckListItem\";\nimport {nanoid} from \"nanoid\";\n\ntype TruckListProps = {\n\n}\n\nexport const TruckList : FunctionComponent<TruckListProps> = (props) => {\n    const [trucks, setTrucks] = useState<FoodTruck[]>([]);\n    const getListOfTrucksFromFirebase = async () => {\n        const response = db.collection(FoodTruck.collectionName);\n        const data = await response\n            .withConverter(FoodTruck.firebaseConverter)\n            .get();\n        data.docs.forEach((doc) => {\n            // console.log(doc.data());\n            setTrucks((prevState) => {\n                return [...prevState, doc.data()];\n            })\n            console.log(trucks[0]);\n        });\n    };\n    useEffect(() => {\n        getListOfTrucksFromFirebase();\n    }, []);\n\n    const getCards = trucks.map(truck => (\n        <Col key={nanoid(5)} className='my-2 mx-1' md={5} xl={3}>\n            <TruckListItem truck={truck} />\n        </Col>\n    ));\n\n    return (\n        <Container>\n            <Row>\n                {getCards}\n            </Row>\n        </Container>\n    )\n}","import {FunctionComponent} from \"react\";\n\ntype MapProps = {\n\n}\n\nexport const ResultsMap : FunctionComponent<MapProps> = (props) => {\n    return (\n        <div></div>\n    )\n}","import {FunctionComponent, useState} from \"react\";\nimport {TruckList} from \"../components/TruckList\";\nimport {ResultsMap} from '../components/ResultsMap'\nimport {Button, ButtonGroup, Col, Container, Row} from \"react-bootstrap\";\n\ntype SearchResultsProps = {\n\n}\n\nexport const SearchResults : FunctionComponent<SearchResultsProps> = (props) => {\n    const [displayMap, setDisplayMap] = useState(false);\n\n    return (\n        <Container>\n            <Row className='my-5'>\n                <Col xs={{span: 2, offset: 4}}>\n                    <ButtonGroup>\n                        <Button\n                            variant={displayMap ? 'light' : 'primary'}\n                            onClick={e => setDisplayMap(true)}\n                            disabled={displayMap}\n                        >\n                            Map\n                        </Button>\n                        <Button\n                            variant={displayMap ? 'primary' : 'light'}\n                            onClick={e => setDisplayMap(false)}\n                            disabled={!displayMap}\n                        >\n                            List\n                        </Button>\n                    </ButtonGroup>\n                </Col>\n            </Row>\n            {displayMap ? <ResultsMap /> : <TruckList/>}\n        </Container>\n    )\n}","import {FunctionComponent} from \"react\";\n\ntype AccountProps = {\n\n}\n\nexport const Account : FunctionComponent<AccountProps> = (props) => {\n    return (\n        <div></div>\n    )\n}","import {FunctionComponent} from \"react\";\n\ntype TruckDetailProps = {\n\n}\n\nexport const TruckDetail : FunctionComponent<TruckDetailProps> = (props) => {\n    return (\n        <div></div>\n    )\n}","const cuisines = [\n    {id: 0, value: ''},\n    {id: 1, value: 'Tacos'},\n    {id: 2, value: 'Burgers'},\n    {id: 3, value: 'Gyros'},\n    {id: 4, value: 'Kabobs'},\n    {id: 5, value: 'Barbeque'},\n    {id: 6, value: 'Ice Cream'},\n    {id: 7, value: 'Subs'},\n    {id: 8, value: 'Coffee'},\n    {id: 9, value: 'Hot Dogs'},\n];\n\nexport {cuisines};","import MenuItem from \"../models/MenuItem\";\nimport {FormEvent, FunctionComponent, useState} from \"react\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport {nanoid} from \"nanoid\";\n\ntype MenuInputProps = {\n    menuList: MenuItem[],\n    addItem: (item: MenuItem) => void,\n}\n\nexport const MenuInput: FunctionComponent<MenuInputProps> = ({menuList, addItem}) => {\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n\n    const handleAddItem = (e: FormEvent) => {\n        e.preventDefault();\n        addItem(new MenuItem(name, price));\n        setName('');\n        setPrice('');\n    }\n\n    const listItems = menuList.map((item) =>\n        <Row className='my-1' key={nanoid()}>\n            <Col xs={7}>\n                {item.name}\n            </Col>\n            <Col xs={3}>\n                ${item.price}\n            </Col>\n        </Row>\n    );\n\n    return (\n        <div>\n            <Row className='mb-2'>\n                <Col xs={7}>\n                    Menu Item\n                </Col>\n                <Col xs={3}>\n                    Price\n                </Col>\n            </Row>\n            {listItems}\n            <Row>\n                <Col xs={7}>\n                    <Form.Control\n                        type='text'\n                        placeholder='Menu Item'\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                </Col>\n                <Col xs={3}>\n                    <Form.Control\n                        type='text'\n                        placeholder='Price'\n                        value={price}\n                        onChange={e => setPrice(e.target.value)}\n                    />\n                </Col>\n                <Col>\n                    <Button variant='secondary' onClick={handleAddItem}>\n                        <FontAwesomeIcon icon={faPlus} />\n                    </Button>\n                </Col>\n            </Row>\n        </div>\n    );\n}","import {FormEvent, FunctionComponent, useRef, useState} from \"react\";\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\nimport {usePlacesWidget} from \"react-google-autocomplete\";\nimport {cuisines} from \"../models/Cuisines\";\nimport {MenuInput} from \"./MenuInput\";\nimport MenuItem from \"../models/MenuItem\";\nimport {db, storage} from \"../config/firebaseConfig\";\nimport {nanoid} from \"nanoid\";\nimport {useNavigate} from \"react-router-dom\";\nimport FoodTruck from \"../models/FoodTruck\";\n\ntype AddTruckFormProps = {\n\n}\n\nexport const AddTruckForm: FunctionComponent<AddTruckFormProps> = (props) => {\n    const [inputState, setInputState] = useState({\n        name: '',\n        phone: '',\n        cuisine: cuisines[0].value,\n        website: '',\n    });\n    const [address, setAddress] = useState<google.maps.places.PlaceResult>({});\n    const [menu, setMenu] = useState<MenuItem[]>([]);\n    const [imageFile, setImageFile] = useState<File>();\n    const {ref} = usePlacesWidget<HTMLInputElement>({\n        apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        onPlaceSelected: (p) => {\n            setAddress(p);\n        },\n        options: {\n            types: ['address'],\n        }\n    });\n    const navigate = useNavigate();\n\n    const getCuisines = () => {\n        return (\n            <Form.Select\n                value={inputState.cuisine}\n                onChange={(e) => {\n                    setInputState({...inputState, cuisine: e.target.value})\n                }}\n            >\n                {cuisines.map((cuisine, id) => (\n                    <option key={id} value={cuisine.value}>{cuisine.value}</option>\n                ))}\n            </Form.Select>\n        );\n    };\n\n    const addMenuItem = (item: MenuItem) => {\n        setMenu((prevState) => {\n            return [...prevState, item];\n        });\n    };\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n\n        const truckImagesRef = storage.ref(`/img/${imageFile!.name}${nanoid(5)}`);\n\n        const upload = truckImagesRef.put(imageFile!);\n\n        upload.on(\n            'state_changed',\n            (snapshot) => {},\n            (error) => {\n                console.error(error);\n            },\n            () => {\n                upload.snapshot.ref.getDownloadURL()\n                    .then((downloadURL) => {\n                        const foodTruck = new FoodTruck(\n                            inputState.name,\n                            address.formatted_address!,\n                            address.geometry?.location!,\n                            inputState.phone,\n                            inputState.cuisine,\n                            inputState.website,\n                            menu,\n                            downloadURL\n                        );\n\n                        db.collection('foodTrucks')\n                            .add(foodTruck.toFirestore())\n                            .then(() => {\n                                navigate('/');\n                            })\n                            .catch((error) => {\n                                console.error(error);\n                            });\n                    });\n            }\n        );\n    };\n\n    return (\n        <Container>\n            <Form className='bg-light p-3 rounded shadow' onSubmit={handleSubmit}>\n                <Row className='mb-2'>\n                    <Col xl={6}>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Name'\n                                value={inputState.name}\n                                onChange={(e) => {\n                                    setInputState({...inputState, name: e.target.value})\n                                }}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col xl={6}>\n                        <Form.Group>\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Address'\n                                ref={ref}\n                                onChange={(e) => e.preventDefault()}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row className='my-2'>\n                    <Col xs={6} xxl={3}>\n                        <Form.Group>\n                            <Form.Label>Phone Number</Form.Label>\n                            <Form.Control\n                                type='tel'\n                                placeholder='Phone Number'\n                                value={inputState.phone}\n                                onChange={(e) => {\n                                    setInputState({...inputState, phone: e.target.value})\n                                }}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col xs={6} xxl={3}>\n                        <Form.Group>\n                            <Form.Label>Cuisine</Form.Label>\n                            {getCuisines()}\n                        </Form.Group>\n                    </Col>\n                    <Col xxl={6}>\n                        <Form.Group>\n                            <Form.Label>Website</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Website'\n                                value={inputState.website}\n                                onChange={(e) => {\n                                    setInputState({...inputState, website: e.target.value})\n                                }}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"m-3\">\n                            <label className='m-3'>Upload image:</label>\n                            <input\n                                type=\"file\"\n                                onChange={(e) => {\n                                    if (e.target.files) {\n                                        setImageFile(e.target.files[0]);\n                                    }\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n                <MenuInput menuList={menu} addItem={addMenuItem}/>\n                <Button variant='primary' type='submit' className='mt-2 rounded-pill shadow-sm'>\n                    Add truck\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import {FunctionComponent} from \"react\";\nimport {Col, Container, Image, Row} from \"react-bootstrap\";\nimport {AddTruckForm} from \"../components/AddTruckForm\";\n\ntype AddTruckProps = {\n\n}\n\nexport const AddTruck : FunctionComponent<AddTruckProps> = (props) => {\n    return (\n        <Container fluid>\n            <Row className='mt-4'>\n                <Col xs={{span: 4, offset: 4}} md={{span: 2, offset: 5}}>\n                    <Image src='./logo.svg' width='100%' fluid />\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={{span: 6, offset: 3}} className='mt-4'>\n                    <h2 className='text-center fw-bold'>Add a truck</h2>\n                </Col>\n            </Row>\n            <Row className='mt-4'>\n                <Col md={{span: 8, offset: 2}}>\n                    <AddTruckForm />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import {FunctionComponent} from \"react\";\nimport {Container, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\ntype NavMenuProps = {}\n\nexport const NavMenu : FunctionComponent<NavMenuProps> = (props) => {\n    const navStyle = {'fontSize':'1.25rem', 'letterSpacing':'.1rem', '--bs-bg-opacity': '.9'}\n\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" className='shadow-sm border-top border-3' style={navStyle}>\n            <Container>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link as={Link} to='/'>Search</Nav.Link>\n                        <Nav.Link as={Link} to='add'>Add your Truck</Nav.Link>\n                        <Nav.Link as={Link} to=''>About</Nav.Link>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link as={Link} to='login'>Sign In</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}","import React from 'react';\nimport './scss/App.scss';\nimport {Home} from \"./pages/Home\";\nimport {Routes, Route} from 'react-router-dom'\nimport {SignIn} from \"./pages/SignIn\";\nimport {CreateAccount} from \"./pages/CreateAccount\";\nimport {SearchResults} from \"./pages/SearchResults\";\nimport {Account} from \"./pages/Account\";\nimport {TruckDetail} from \"./pages/TruckDetail\";\nimport {AddTruck} from \"./pages/AddTruck\";\nimport {NavMenu} from \"./components/NavMenu\";\n\nrequire('dotenv').config();\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NavMenu />\n            <Routes>\n                <Route path='/' element={<Home/>} />\n                <Route path='login' element={<SignIn/>} />\n                <Route path='create' element={<CreateAccount/>}/>\n                <Route path='results' element={<SearchResults/>} />\n                <Route path='detail' element={<TruckDetail />} />\n                <Route path='account' element={<Account />} />\n                <Route path='add' element={<AddTruck />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}